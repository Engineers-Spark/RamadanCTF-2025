import sqlite3

def initialize_db(admin_username, admin_password, flag):
    """Initialize the database with required tables and sample data"""
    conn = sqlite3.connect('bank.db')
    cursor = conn.cursor()
    
    # Create tables
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS accounts (
        id INTEGER PRIMARY KEY,
        account_number TEXT UNIQUE,
        customer_name TEXT,
        balance REAL,
        account_type TEXT
    )
    ''')
    
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY,
        username TEXT UNIQUE,
        password TEXT,
        role TEXT
    )
    ''')
    
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS internal_data (
        id INTEGER PRIMARY KEY,
        content TEXT
    )
    ''')
    
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS search_logs (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        query TEXT,
        timestamp TEXT,
        user_agent TEXT
    )
    ''')
    
    # Insert sample data
    sample_accounts = [
        (1, 'ACC100001', 'John Smith', 15420.75, 'Savings'),
        (2, 'ACC100002', 'Mary Johnson', 32500.00, 'Premium'),
        (3, 'ACC100003', 'Robert Davis', 7890.50, 'Checking'),
        (4, 'ACC100004', 'Jennifer Wilson', 45678.20, 'Investment'),
        (5, 'ACC100005', 'Michael Brown', 12345.67, 'Savings'),
        (6, 'ACC100006', 'Sarah Anderson', 98765.43, 'Premium'),
        (7, 'ACC100007', 'David Thompson', 2468.10, 'Checking'),
        (8, 'ACC100008', 'Lisa Garcia', 13579.24, 'Investment'),
        (9, 'ACC100009', 'James Martinez', 36925.81, 'Savings'),
        (10, 'ACC100010', 'Bou3rada', 55555.55, 'Premium')
    ]
    
    for account in sample_accounts:
        cursor.execute('INSERT OR IGNORE INTO accounts VALUES (?, ?, ?, ?, ?)', account)
    
    # Insert admin user
    cursor.execute('INSERT OR IGNORE INTO users VALUES (1, ?, ?, "admin")', (admin_username, admin_password))
    
    # Insert secret (flag)
    cursor.execute('INSERT OR IGNORE INTO internal_data VALUES (1, ?)', (flag,))
    
    conn.commit()
    conn.close()
    
    print("Database initialized successfully!")