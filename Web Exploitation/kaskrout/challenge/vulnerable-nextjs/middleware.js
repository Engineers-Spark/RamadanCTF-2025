import { NextResponse } from 'next/server';

export function middleware(req) {
    // Get session token from cookies
    const session = req.cookies.get('session');

    // If no session, redirect to login
    if (!session) {
        return NextResponse.redirect(new URL('/login', req.url));
    }

    // Vulnerable: Authorization bypass using "x-middleware-subrequest" header
    if (req.headers.get('x-middleware-subrequest') === 'middleware:middleware') {
        return NextResponse.next(); // Bypass authentication check when header is present
    }

    // If no valid subrequest header, return a forbidden response
    return new NextResponse('Forbidden', { status: 403 });
}

// Apply middleware to specific protected routes
export const config = {
    matcher: ['/admin', '/dashboard'], // These pages require authentication
};
