document.addEventListener('DOMContentLoaded', function() {
  const loginForm = document.getElementById('login-form');
  const projectsContainer = document.getElementById('projects-container');
  const projectsList = document.getElementById('projects-list');
  const logoutBtn = document.getElementById('logout-btn');
  
 
  loginForm.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const username = document.getElementById('username').value;
    const password = document.getElementById('password').value;
    
    fetch('/graphql', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        query: `
          mutation {
            login(username: "${username}", password: "${password}") {
              token
              user {
                id
                username
                role
              }
            }
          }
        `
      })
    })
    .then(response => response.json())
    .then(result => {
      if (result.data && result.data.login) {
        
        const { token, user } = result.data.login;
        
        
        localStorage.setItem('token', token);
        localStorage.setItem('user', JSON.stringify(user));
        
        document.querySelector('.login-box').classList.add('hidden');
        projectsContainer.classList.remove('hidden');
        
        
        loadProjects();
      } else {
        alert('Login failed. Invalid username or password.');
      }
    })
    .catch(error => {
      console.error('Error during login:', error);
      alert('Login error. Please try again.');
    });
  });
  

  function loadProjects() {
    fetch('/graphql', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${localStorage.getItem('token')}`
      },
      body: JSON.stringify({
        query: `
          {
            publicProjects {
              id
              name
              description
              secrets {
                id
                name
              }
            }
          }
        `
      })
    })
    .then(response => response.json())
    .then(result => {
      if (result.data && result.data.publicProjects) {
        const projects = result.data.publicProjects;
        displayProjects(projects);
      }
    })
    .catch(error => {
      console.error('Error fetching projects:', error);
    });
  }
  
  
  function displayProjects(projects) {
    projectsList.innerHTML = '';
    
    projects.forEach(project => {
      const projectCard = document.createElement('div');
      projectCard.className = 'project-card';
      
      projectCard.innerHTML = `
        <h3>${project.name}</h3>
        <p>${project.description}</p>
        <div class="project-secrets">
          <h4>Secrets:</h4>
          <ul>
            ${project.secrets.map(secret => `<li>${secret.name}</li>`).join('')}
          </ul>
        </div>
      `;
      
      projectsList.appendChild(projectCard);
    });
  }
  
  
  logoutBtn.addEventListener('click', function() {
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    
    projectsContainer.classList.add('hidden');
    document.querySelector('.login-box').classList.remove('hidden');
    projectsList.innerHTML = '';
  });
  
  
  const token = localStorage.getItem('token');
  if (token) {
    document.querySelector('.login-box').classList.add('hidden');
    projectsContainer.classList.remove('hidden');
    loadProjects();
  }
});