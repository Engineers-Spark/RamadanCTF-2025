from z3 import *

solver = Solver()


input = [BitVec(f'input{i}', 8) for i in range(24)]


for i in range(23):
    solver.add(input[i] >= 0x20)
    solver.add(input[i] <= 0x7e)


solver.add(6098 * input[0] + (input[0] ^ 0x135C) + input[0] - 4286 == 506810)
solver.add(1892 * input[0] + (input[0] ^ 0x558) + input[0] - 3697 == 154713)
solver.add(741 * input[0] + (input[0] ^ 0xFB8) + input[0] - 660 == 65001)
solver.add(6525 * input[0] + (input[0] ^ 0x3CD) + input[0] - 1138 == 541446)
solver.add(53 * input[0] + (input[0] ^ 0x1AB1) + input[0] - 5299 == 6065)
solver.add((input[0] ^ 0x1E) + 4563 * input[0] + input[0] - 3380 == 375509)
solver.add(6693 * input[0] + (input[0] ^ 0x1355) + input[0] - 4991 == 555481)
solver.add(4666 * input[0] + (input[0] ^ 0x15A8) + input[0] - 559 == 392429)
solver.add(5938 * input[0] + (input[0] ^ 0x19F8) + input[0] - 4068 == 495440)
solver.add(6793 * input[0] + (input[0] ^ 0x1A45) + input[0] - 1424 == 569156)
solver.add(3266 * input[1] + (input[1] ^ 0x15F3) + input[1] - 6381 == 365030)
solver.add(583 * input[1] + (input[1] ^ 0x21E) + input[1] - 544 == 65486)
solver.add(4280 * input[1] + (input[1] ^ 0x503) + input[1] - 4332 == 476535)
solver.add(4704 * input[1] + (input[1] ^ 0x25B) + input[1] - 5305 == 522210)
solver.add(5842 * input[1] + (input[1] ^ 0x1A4) + input[1] - 4933 == 649951)
solver.add(3936 * input[1] + (input[1] ^ 0x1378) + input[1] - 4963 == 440853)
solver.add(111 * input[1] + (input[1] ^ 0x1264) + input[1] - 2707 == 14465)
solver.add(5102 * input[1] + (input[1] ^ 0x879) + input[1] - 1282 == 572311)
solver.add(5662 * input[1] + (input[1] ^ 0x473) + input[1] - 961 == 634322)
solver.add(2525 * input[1] + (input[1] ^ 0x2D7) + input[1] - 482 == 283109)
solver.add(3713 * input[2] + (input[2] ^ 0xF99) + input[2] - 6101 == 358245)
solver.add(3125 * input[2] + (input[2] ^ 0x10F4) + input[2] - 6643 == 300824)
solver.add(3433 * input[2] + (input[2] ^ 0x587) + input[2] - 721 == 333887)
solver.add(560 * input[2] + (input[2] ^ 0x17E8) + input[2] - 1089 == 59353)
solver.add(5629 * input[2] + (input[2] ^ 0x1295) + input[2] - 1509 == 549453)
solver.add(3594 * input[2] + (input[2] ^ 0x6BD) + input[2] - 6493 == 343978)
solver.add(1352 * input[2] + (input[2] ^ 0x640) + input[2] - 3997 == 128813)
solver.add(4060 * input[2] + (input[2] ^ 0x1A2F) + input[2] - 6166 == 394485)
solver.add(5342 * input[2] + (input[2] ^ 0x1428) + input[2] - 100 == 523364)
solver.add(6068 * input[2] + (input[2] ^ 0x1E0) + input[2] - 592 == 588486)
solver.add(6550 * input[3] + (input[3] ^ 0x1061) + input[3] - 4349 == 746580)
solver.add((input[3] ^ 0x72) + 5682 * input[3] + input[3] - 1721 == 646141)
solver.add(5356 * input[3] + (input[3] ^ 0xDDB) + input[3] - 3136 == 611059)
solver.add(5841 * input[3] + (input[3] ^ 0xF20) + input[3] - 2051 == 667859)
solver.add(6930 * input[3] + (input[3] ^ 0x9E4) + input[3] - 6809 == 785779)
solver.add(1235 * input[3] + (input[3] ^ 0x17EE) + input[3] - 1329 == 145619)
solver.add(523 * input[3] + (input[3] ^ 0x1FE) + input[3] - 2929 == 57203)
solver.add(4520 * input[3] + (input[3] ^ 0x11DA) + input[3] - 2427 == 517487)
solver.add(3482 * input[3] + (input[3] ^ 0xA93) + input[3] - 382 == 399465)
solver.add(3346 * input[3] + (input[3] ^ 0x70E) + input[3] - 862 == 382612)
solver.add(3702 * input[4] + (input[4] ^ 0x56B) + input[4] - 5056 == 392445)
solver.add((input[4] ^ 0x64) + 1083 * input[4] + input[4] - 5170 == 110833)
solver.add(2568 * input[4] + (input[4] ^ 0x1464) + input[4] - 1512 == 278506)
solver.add(5704 * input[4] + (input[4] ^ 0xF11) + input[4] - 5384 == 609013)
solver.add(787 * input[4] + (input[4] ^ 0xDFE) + input[4] - 948 == 86845)
solver.add(391 * input[4] + (input[4] ^ 0x12D1) + input[4] - 6838 == 39900)
solver.add(1720 * input[4] + (input[4] ^ 0x14DD) + input[4] - 143 == 189306)
solver.add(4413 * input[4] + (input[4] ^ 0xA60) + input[4] - 4477 == 470392)
solver.add(6841 * input[4] + (input[4] ^ 0x170E) + input[4] - 216 == 737867)
solver.add((input[4] ^ 0x7FC) + 18 * input[4] + input[4] - 1786 == 2190)
solver.add(881 * input[5] + (input[5] ^ 0x1672) + input[5] - 3174 == 110953)
solver.add(5937 * input[5] + (input[5] ^ 0x19C1) + input[5] - 3038 == 733922)
solver.add(3902 * input[5] + (input[5] ^ 0x890) + input[5] - 1054 == 481298)
solver.add(5178 * input[5] + (input[5] ^ 0x2B4) + input[5] - 4911 == 632825)
solver.add(3358 * input[5] + (input[5] ^ 0x5C7) + input[5] - 1288 == 413337)
solver.add(4070 * input[5] + (input[5] ^ 0x74E) + input[5] - 6106 == 496472)
solver.add(3939 * input[5] + (input[5] ^ 0xD1A) + input[5] - 4242 == 483803)
solver.add(4083 * input[5] + (input[5] ^ 0x31E) + input[5] - 6662 == 496539)
solver.add(1591 * input[5] + (input[5] ^ 0x1B2) + input[5] - 5360 == 190913)
solver.add(1571 * input[5] + (input[5] ^ 0x1C5) + input[5] - 435 == 193367)
solver.add(3358 * input[6] + (input[6] ^ 0x536) + input[6] - 5945 == 297753)
solver.add((input[6] ^ 0x42) + 6296 * input[6] + input[6] - 5570 == 561184)
solver.add(2129 * input[6] + (input[6] ^ 0xE94) + input[6] - 557 == 194933)
solver.add(3183 * input[6] + (input[6] ^ 0x6A9) + input[6] - 1249 == 287090)
solver.add(889 * input[6] + (input[6] ^ 0x13C7) + input[6] - 2492 == 82629)
solver.add(2178 * input[6] + (input[6] ^ 0x874) + input[6] - 4126 == 194078)
solver.add(1079 * input[6] + (input[6] ^ 0x16EC) + input[6] - 511 == 102503)
solver.add(5085 * input[6] + (input[6] ^ 0xABA) + input[6] - 1074 == 459450)
solver.add(4542 * input[6] + (input[6] ^ 0x1005) + input[6] - 1272 == 411789)
solver.add(2933 * input[6] + (input[6] ^ 0x1629) + input[6] - 1725 == 268082)
solver.add(3132 * input[7] + (input[7] ^ 0x722) + input[7] - 2823 == 158769)
solver.add(1873 * input[7] + (input[7] ^ 0x481) + input[7] - 2653 == 94123)
solver.add(238 * input[7] + (input[7] ^ 0xCD2) + input[7] - 6149 == 9337)
solver.add(795 * input[7] + (input[7] ^ 0x1856) + input[7] - 886 == 45955)
solver.add(1809 * input[7] + (input[7] ^ 0x1AE3) + input[7] - 5949 == 93225)
solver.add(4301 * input[7] + (input[7] ^ 0x740) + input[7] - 909 == 220400)
solver.add(1459 * input[7] + (input[7] ^ 0xA8B) + input[7] - 6777 == 70427)
solver.add(1734 * input[7] + (input[7] ^ 0x243) + input[7] - 2554 == 86555)
solver.add(2572 * input[7] + (input[7] ^ 0x1402) + input[7] - 6655 == 129737)
solver.add(3845 * input[7] + (input[7] ^ 0x352) + input[7] - 5123 == 191888)
solver.add(5334 * input[8] + (input[8] ^ 0xEA3) + input[8] - 6949 == 503712)
solver.add(953 * input[8] + (input[8] ^ 0x15F4) + input[8] - 897 == 95280)
solver.add(3606 * input[8] + (input[8] ^ 0x16E2) + input[8] - 3944 == 344542)
solver.add(2551 * input[8] + (input[8] ^ 0x1911) + input[8] - 2969 == 245949)
solver.add(3437 * input[8] + (input[8] ^ 0x4E9) + input[8] - 2883 == 324933)
solver.add(2181 * input[8] + (input[8] ^ 0x15B7) + input[8] - 4740 == 208158)
solver.add(2854 * input[8] + (input[8] ^ 0x1A7E) + input[8] - 470 == 277444)
solver.add(2662 * input[8] + (input[8] ^ 0x60B) + input[8] - 1050 == 253555)
solver.add(4980 * input[8] + (input[8] ^ 0x1018) + input[8] - 5936 == 471426)
solver.add(4431 * input[8] + (input[8] ^ 0x2F8) + input[8] - 6550 == 415169)
solver.add(2585 * input[9] + (input[9] ^ 0x17CE) + input[9] - 3328 == 201813)
solver.add((input[9] ^ 0x4E) + 2330 * input[9] + input[9] - 1743 == 177747)
solver.add(2991 * input[9] + (input[9] ^ 0xD79) + input[9] - 632 == 233132)
solver.add(6935 * input[9] + (input[9] ^ 0x1770) + input[9] - 81 == 539940)
solver.add(2935 * input[9] + (input[9] ^ 0x8B8) + input[9] - 1338 == 227027)
solver.add(5819 * input[9] + (input[9] ^ 0x113D) + input[9] - 6661 == 445943)
solver.add(3354 * input[9] + (input[9] ^ 0x12B) + input[9] - 6474 == 252219)
solver.add(3588 * input[9] + (input[9] ^ 0xAA5) + input[9] - 817 == 278328)
solver.add(4402 * input[9] + (input[9] ^ 0x1F5) + input[9] - 4701 == 334770)
solver.add(3133 * input[9] + (input[9] ^ 0x1344) + input[9] - 5461 == 240730)
solver.add(2715 * input[10] + (input[10] ^ 0x138) + input[10] - 4350 == 137150)
solver.add(6043 * input[10] + (input[10] ^ 0xA52) + input[10] - 4429 == 312521)
solver.add(818 * input[10] + (input[10] ^ 0x1602) + input[10] - 673 == 47601)
solver.add(1214 * input[10] + (input[10] ^ 0x14F4) + input[10] - 6673 == 61819)
solver.add(1059 * input[10] + (input[10] ^ 0x533) + input[10] - 1936 == 54471)
solver.add(2162 * input[10] + (input[10] ^ 0x1B02) + input[10] - 6113 == 113329)
solver.add(1854 * input[10] + (input[10] ^ 0xBF7) + input[10] - 6176 == 93295)
solver.add(1124 * input[10] + (input[10] ^ 0x19FB) + input[10] - 1697 == 63410)
solver.add(1941 * input[10] + (input[10] ^ 0xF09) + input[10] - 2198 == 102687)
solver.add((input[10] ^ 0xD) + 6642 * input[10] + input[10] - 161 == 345332)
solver.add(4898 * input[11] + (input[11] ^ 0xAA8) + input[11] - 237 == 526711)
solver.add(2279 * input[11] + (input[11] ^ 0x61F) + input[11] - 2880 == 242732)
solver.add(6472 * input[11] + (input[11] ^ 0x951) + input[11] - 1309 == 693664)
solver.add(176 * input[11] + (input[11] ^ 0xD23) + input[11] - 6673 == 15666)
solver.add(6849 * input[11] + (input[11] ^ 0x1147) + input[11] - 1035 == 736311)
solver.add(1580 * input[11] + (input[11] ^ 0x19B9) + input[11] - 744 == 175033)
solver.add(489 * input[11] + (input[11] ^ 0x4D2) + input[11] - 3807 == 49832)
solver.add(6429 * input[11] + (input[11] ^ 0x936) + input[11] - 3254 == 687153)
solver.add(921 * input[11] + (input[11] ^ 0xFDF) + input[11] - 134 == 102540)
solver.add(3119 * input[11] + (input[11] ^ 0xE98) + input[11] - 147 == 337520)
solver.add(3044 * input[12] + (input[12] ^ 0x595) + input[12] - 2876 == 306189)
solver.add(3282 * input[12] + (input[12] ^ 0xE7D) + input[12] - 4443 == 330748)
solver.add(5926 * input[12] + (input[12] ^ 0xC8C) + input[12] - 6592 == 595340)
solver.add(266 * input[12] + (input[12] ^ 0xC51) + input[12] - 2750 == 27341)
solver.add(6939 * input[12] + (input[12] ^ 0xAED) + input[12] - 6937 == 696699)
solver.add(770 * input[12] + (input[12] ^ 0x102E) + input[12] - 6317 == 75725)
solver.add(1514 * input[12] + (input[12] ^ 0x1217) + input[12] - 583 == 157154)
solver.add(5322 * input[12] + (input[12] ^ 0xF0F) + input[12] - 2705 == 538864)
solver.add(1607 * input[12] + (input[12] ^ 0x12A9) + input[12] - 6769 == 160451)
solver.add(1505 * input[12] + (input[12] ^ 0x39F) + input[12] - 3300 == 149824)
solver.add(1652 * input[13] + (input[13] ^ 0xE98) + input[13] - 4730 == 189184)
solver.add((input[13] ^ 0x31) + 4292 * input[13] + input[13] - 1470 == 492291)
solver.add(1766 * input[13] + (input[13] ^ 0x166B) + input[13] - 4446 == 204415)
solver.add(1153 * input[13] + (input[13] ^ 0x1775) + input[13] - 630 == 137974)
solver.add(3904 * input[13] + (input[13] ^ 0x1757) + input[13] - 3192 == 451807)
solver.add(3872 * input[13] + (input[13] ^ 0x196D) + input[13] - 365 == 451460)
solver.add(2985 * input[13] + (input[13] ^ 0x41F) + input[13] - 4996 == 339526)
solver.add(3568 * input[13] + (input[13] ^ 0x17FD) + input[13] - 1646 == 414819)
solver.add(6273 * input[13] + (input[13] ^ 0x21F) + input[13] - 6423 == 715707)
solver.add(2169 * input[14] + (input[14] ^ 0xD88) + input[14] - 3882 == 205811)
solver.add(6899 * input[14] + (input[14] ^ 0x314) + input[14] - 3695 == 652648)
solver.add(1164 * input[14] + (input[14] ^ 0x9FA) + input[14] - 2465 == 110679)
solver.add(5610 * input[14] + (input[14] ^ 0xD90) + input[14] - 1265 == 535315)
solver.add(2228 * input[14] + (input[14] ^ 0xEDF) + input[14] - 6545 == 208922)
solver.add(2593 * input[14] + (input[14] ^ 0x1A88) + input[14] - 395 == 252906)
solver.add((input[14] ^ 0xD3F) + 384 * input[14] + input[14] - 6300 == 33699)
solver.add(2030 * input[14] + (input[14] ^ 0x99C) + input[14] - 6843 == 188601)
solver.add(1249 * input[14] + (input[14] ^ 0x530) + input[14] - 1686 == 118455)
solver.add(1395 * input[15] + (input[15] ^ 0xCBD) + input[15] - 5150 == 100074)
solver.add(5041 * input[15] + (input[15] ^ 0xC77) + input[15] - 5702 == 365498)
solver.add(1531 * input[15] + (input[15] ^ 0x1103) + input[15] - 1052 == 115210)
solver.add(3996 * input[15] + (input[15] ^ 0xAC9) + input[15] - 4524 == 289945)
solver.add(5025 * input[15] + (input[15] ^ 0x705) + input[15] - 4695 == 364071)
solver.add(5060 * input[15] + (input[15] ^ 0xECD) + input[15] - 1297 == 371872)
solver.add(4636 * input[15] + (input[15] ^ 0x1802) + input[15] - 1121 == 343599)
solver.add(5031 * input[15] + (input[15] ^ 0x1982) + input[15] - 4276 == 369663)
solver.add(4126 * input[15] + (input[15] ^ 0x54B) + input[15] - 6500 == 296053)
solver.add(3764 * input[15] + (input[15] ^ 0xA2C) + input[15] - 624 == 276882)
solver.add(5450 * input[16] + (input[16] ^ 0xEB3) + input[16] - 3885 == 632214)
solver.add(3396 * input[16] + (input[16] ^ 0x72B) + input[16] - 108 == 395831)
solver.add(2129 * input[16] + (input[16] ^ 0xC3A) + input[16] - 4227 == 246003)
solver.add(3181 * input[16] + (input[16] ^ 0x1AEA) + input[16] - 19 == 375907)
solver.add(500 * input[16] + (input[16] ^ 0x1352) + input[16] - 1580 == 61438)
solver.add(4959 * input[16] + (input[16] ^ 0xBDE) + input[16] - 5133 == 573213)
solver.add(6257 * input[16] + (input[16] ^ 0x1D5) + input[16] - 4310 == 722035)
solver.add(409 * input[16] + (input[16] ^ 0x1491) + input[16] - 3871 == 49038)
solver.add(4449 * input[16] + (input[16] ^ 0x976) + input[16] - 4991 == 513515)
solver.add(3981 * input[16] + (input[16] ^ 0x182B) + input[16] - 390 == 467761)
solver.add(4605 * input[17] + (input[17] ^ 0x123C) + input[17] - 4154 == 438123)
solver.add(1285 * input[17] + (input[17] ^ 0x35B) + input[17] - 5753 == 117189)
solver.add(1393 * input[17] + (input[17] ^ 0xAC1) + input[17] - 1915 == 133233)
solver.add(5385 * input[17] + (input[17] ^ 0x1642) + input[17] - 1836 == 515495)
solver.add(5168 * input[17] + (input[17] ^ 0x1837) + input[17] - 6783 == 490520)
solver.add(6749 * input[17] + (input[17] ^ 0x105D) + input[17] - 2616 == 642732)
solver.add(4677 * input[17] + (input[17] ^ 0xCA9) + input[17] - 3085 == 444643)
solver.add(2019 * input[17] + (input[17] ^ 0xD56) + input[17] - 1381 == 193856)
solver.add(5654 * input[17] + (input[17] ^ 0x37F) + input[17] - 3804 == 534221)
solver.add(3676 * input[17] + (input[17] ^ 0x1220) + input[17] - 3022 == 351028)
solver.add(4067 * input[18] + (input[18] ^ 0x7F8) + input[18] - 485 == 282188)
solver.add(1016 * input[18] + (input[18] ^ 0xCFD) + input[18] - 1109 == 72320)
solver.add(6769 * input[18] + (input[18] ^ 0x1183) + input[18] - 3862 == 467818)
solver.add(1715 * input[18] + (input[18] ^ 0xB53) + input[18] - 2591 == 118651)
solver.add(3552 * input[18] + (input[18] ^ 0x44A) + input[18] - 1585 == 244611)
solver.add(3130 * input[18] + (input[18] ^ 0x282) + input[18] - 5539 == 211211)
solver.add(5746 * input[18] + (input[18] ^ 0x14C8) + input[18] - 1811 == 399993)
solver.add(3008 * input[18] + (input[18] ^ 0x169C) + input[18] - 5885 == 207585)
solver.add(6812 * input[18] + (input[18] ^ 0x8D4) + input[18] - 3556 == 468734)
solver.add(2629 * input[19] + (input[19] ^ 0x18B7) + input[19] - 5360 == 137675)
solver.add(2878 * input[19] + (input[19] ^ 0x176) + input[19] - 1716 == 148314)
solver.add(3987 * input[19] + (input[19] ^ 0x1AFB) + input[19] - 6199 == 208040)
solver.add(880 * input[19] + (input[19] ^ 0x676) + input[19] - 1893 == 45521)
solver.add(3236 * input[19] + (input[19] ^ 0x136A) + input[19] - 2756 == 170526)
solver.add(4821 * input[19] + (input[19] ^ 0x37F) + input[19] - 3162 == 248425)
solver.add(3391 * input[19] + (input[19] ^ 0x19F1) + input[19] - 1277 == 181704)
solver.add(4967 * input[19] + (input[19] ^ 0x512) + input[19] - 1411 == 258243)
solver.add(3224 * input[19] + (input[19] ^ 0x10D2) + input[19] - 231 == 171795)
solver.add(1904 * input[19] + (input[19] ^ 0xF49) + input[19] - 2255 == 100770)
solver.add(5224 * input[20] + (input[20] ^ 0x198E) + input[20] - 1613 == 605915)
solver.add(3615 * input[20] + (input[20] ^ 0x994) + input[20] - 1751 == 416624)
solver.add(5331 * input[20] + (input[20] ^ 0x183B) + input[20] - 1453 == 617943)
solver.add(4326 * input[20] + (input[20] ^ 0x1AC0) + input[20] - 3107 == 501333)
solver.add(6219 * input[20] + (input[20] ^ 0xC2B) + input[20] - 872 == 717588)
solver.add(1770 * input[20] + (input[20] ^ 0x2DB) + input[20] - 1767 == 202578)
solver.add(4933 * input[20] + (input[20] ^ 0xF2F) + input[20] - 1203 == 570139)
solver.add(6210 * input[20] + (input[20] ^ 0x75D) + input[20] - 2266 == 713837)
solver.add(653 * input[20] + (input[20] ^ 0x1309) + input[20] - 6336 == 73860)
solver.add(648 * input[20] + (input[20] ^ 0x198D) + input[20] - 3281 == 78008)
solver.add(2903 * input[21] + (input[21] ^ 0x12BC) + input[21] - 2618 == 353571)
solver.add(4280 * input[21] + (input[21] ^ 0x5A2) + input[21] - 4834 == 514666)
solver.add(5795 * input[21] + (input[21] ^ 0x1989) + input[21] - 4069 == 703887)
solver.add(279 * input[21] + (input[21] ^ 0xF36) + input[21] - 3948 == 33851)
solver.add(3151 * input[21] + (input[21] ^ 0xB5D) + input[21] - 6827 == 377417)
solver.add(4023 * input[21] + (input[21] ^ 0x1247) + input[21] - 353 == 491221)
solver.add(5555 * input[21] + (input[21] ^ 0xA53) + input[21] - 4004 == 670874)
solver.add(6758 * input[21] + (input[21] ^ 0x75D) + input[21] - 5653 == 814014)
solver.add(1819 * input[21] + (input[21] ^ 0x8FE) + input[21] - 3321 == 219082)
solver.add(1187 * input[21] + (input[21] ^ 0xB86) + input[21] - 2893 == 143926)
solver.add(4232 * input[22] + (input[22] ^ 0x15F1) + input[22] - 720 == 533921)
solver.add(6850 * input[22] + (input[22] ^ 0xB70) + input[22] - 1926 == 857278)
solver.add(4480 * input[22] + (input[22] ^ 0x5EE) + input[22] - 1495 == 560057)
solver.add(1344 * input[22] + (input[22] ^ 0x705) + input[22] - 5153 == 164884)
solver.add(5056 * input[22] + (input[22] ^ 0x1354) + input[22] - 1093 == 635937)
solver.add(4678 * input[22] + (input[22] ^ 0x6E7) + input[22] - 5773 == 580792)
solver.add(5031 * input[22] + (input[22] ^ 0x161) + input[22] - 1447 == 627837)
solver.add(2067 * input[22] + (input[22] ^ 0x1ADB) + input[22] - 3096 == 262226)
solver.add(515 * input[22] + (input[22] ^ 0x5D2) + input[22] - 5398 == 60557)
solver.add(3837 * input[22] + (input[22] ^ 0xA75) + input[22] - 1379 == 480939 )
while solver.check() == sat:
    model = solver.model()
    

    flag = ''.join(chr(model[input[i]].as_long()) for i in range(23))
    print(f"[*] Found flag: {flag}")
    
    new_constraints = [input[i] != model[input[i]] for i in range(23)]
    solver.add(Or(new_constraints))
